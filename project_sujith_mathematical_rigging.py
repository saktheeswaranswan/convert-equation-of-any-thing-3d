# -*- coding: utf-8 -*-
"""project-sujith-mathematical-rigging.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1EXTuHhIGhvft7zFwCqOWftFaPXaPpanU
"""

import pandas as pd

# Load CSV file with x, y, z coordinates
def load_coordinates(file_path):
    return pd.read_csv(file_path)

# Generate sphere equation for wxMaxima format
# Equation format: (x - h)^2 + (y - k)^2 + (z - l)^2 = r^2
def sphere_equation_wxmaxima(x, y, z, r):
    return f"(x - {x})^2 + (y - {y})^2 + (z - {z})^2 = {r}^2"

# Generate wxMaxima equations for all spheres
def generate_wxmaxima_equations(data, radius):
    equations = []
    for _, row in data.iterrows():
        x, y, z = row['x'], row['y'], row['z']
        eq = sphere_equation_wxmaxima(x, y, z, radius)
        equations.append(eq)
    return equations

# Example usage
def main(file_path, radius):
    # Load coordinates from CSV
    data = load_coordinates(file_path)

    # Generate wxMaxima format equations for each sphere
    equations = generate_wxmaxima_equations(data, radius)

    # Print the equations in wxMaxima format
    for i, eq in enumerate(equations, 1):
        print(f"/* Sphere {i} */")
        print(eq)
        print()

# Call the main function with the path to your CSV and the radius of spheres
file_path = 'coordinates.csv'  # Replace with your file path
radius = 5  # Example radius for each sphere

main(file_path, radius)